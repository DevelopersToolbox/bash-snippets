#!/usr/bin/env bash

# -------------------------------------------------------------------------------- #
# Description                                                                      #
# -------------------------------------------------------------------------------- #
# This is an example of the header of a bash script running in 'strict' mode.      #
# -------------------------------------------------------------------------------- #

# -------------------------------------------------------------------------------- #
# Errexit                                                                          #
# -------------------------------------------------------------------------------- #
# Exit on error. Append "|| true" if you expect an error                           #
#                                                                                  #
# Shortcut: set -e                                                                 #
# -------------------------------------------------------------------------------- #
set -o errexit

# -------------------------------------------------------------------------------- #
# Nounset                                                                          #
# -------------------------------------------------------------------------------- #
# Do not allow use of undefined vars. Use ${VAR:-} to use an undefined VAR         #
#                                                                                  #
# Shortcut: set -u                                                                 #
# -------------------------------------------------------------------------------- #
set -o nounset

# -------------------------------------------------------------------------------- #
# Pipefail                                                                         #
# -------------------------------------------------------------------------------- #
# Catch the error in case mysqldump fails (but gzip succeeds) in `mysqldump |gzip` #
#                                                                                  #
# Shortcut: none                                                                   #
# -------------------------------------------------------------------------------- #
set -o pipefail

# -------------------------------------------------------------------------------- #
# Xtrace                                                                           #
# -------------------------------------------------------------------------------- #
# Turn on traces, useful while debugging but commented out by default              #
#                                                                                  #
# Shortcut: set -x                                                                 #
# -------------------------------------------------------------------------------- #
[[ -n ${DEBUG:-} ]] && set -o xtrace

# -------------------------------------------------------------------------------- #
# IFS                                                                              #
# -------------------------------------------------------------------------------- #
# Defines newlines and tabs as delimiters for splitting words and iterating arrays #
# -------------------------------------------------------------------------------- #
IFS=$'\n\t'

# -------------------------------------------------------------------------------- #
# Run Tests                                                                        #
# -------------------------------------------------------------------------------- #
# A VERY simple test function to ensure that it all works                          #
# -------------------------------------------------------------------------------- #

function run_tests()
{
    local filename="strict-mode.sh"
    local string="test"

    # Gotcha Number 1:

    # Under strict mode, the next line aborts with an error:
    # count=$(grep -c "${string}" "${filename}")

    # But this one behaves more nicely:
    count=$(grep -c "${string}" "${filename}" || true)

    echo "count: $count"

    # Gotcha Number 2:

    # Testing for non-existant variables cannot simply be done with a -z
    # as this will error for an unbounded variable. Use ${name:-} instead

    [[ -z "${UNDECLARED_VARIABLE:-}" ]] && echo "I am undeclared!"
}

# -------------------------------------------------------------------------------- #
# Main()                                                                           #
# -------------------------------------------------------------------------------- #
# This is the actual 'script' and the functions/sub routines are called in order.  #
# -------------------------------------------------------------------------------- #

run_tests

# -------------------------------------------------------------------------------- #
# End of Script                                                                    #
# -------------------------------------------------------------------------------- #
# This is the end - nothing more to see here.                                      #
# -------------------------------------------------------------------------------- #
